// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id            BigInt    @id @default(autoincrement()) @db.BigInt
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  userName      String    @unique @db.VarChar(50)
  fullName      String    @db.VarChar(100)
  description   String?   @db.VarChar(250)
  region        String?   @db.VarChar(50)
  mainUrl       String?   @db.VarChar(250)
  avatar     Bytes?    @db.ByteA
  messages      Message[]
  followers     Follow[]  @relation("Follower")
  following     Follow[]  @relation("Following")  
}

model Follow {
  id          BigInt    @id @default(autoincrement()) @db.BigInt
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  follower    Profile   @relation("Follower", fields: [followerId], references: [id])
  followerId  BigInt
  following   Profile   @relation("Following", fields: [followingId], references: [id])
  followingId BigInt
}

model Message {
  id                            BigInt   @id @default(autoincrement()) @db.BigInt
  createdAt                     DateTime @default(now())
  updatedAt                     DateTime @default(now())
  author                        Profile  @relation(fields: [authorId], references: [id])
  authorId                      BigInt
  body                          String   @db.VarChar(150)
  likes                         Int      @default(0)
  image                         Bytes?   @db.ByteA
  originalMessageResponses      MessageResponse[]  @relation("OriginalMessageResponse")
  respondingMessageResponses    MessageResponse[]  @relation("RespondingMessageResponse")
  originalMessageBroadcasts     MessageBroadcast[] @relation("OriginalMessageBroadcast")
  broadcastingMessageBroadcasts MessageBroadcast[] @relation("BroadcastingMessageBroadcast")
}

model MessageResponse {
  id              BigInt    @id @default(autoincrement()) @db.BigInt
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())
  originalMsg     Message   @relation("OriginalMessageResponse", fields: [originalMsgId], references: [id])
  originalMsgId   BigInt
  respondingMsg   Message   @relation("RespondingMessageResponse", fields: [respondingMsgId], references: [id])
  respondingMsgId BigInt
}

model MessageBroadcast {
  id                  BigInt    @id  @default(autoincrement()) @db.BigInt
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @default(now())
  originalMsg         Message   @relation("OriginalMessageBroadcast", fields: [originalMsgId], references: [id])
  originalMsgId       BigInt
  broadcastingMsg     Message   @relation("BroadcastingMessageBroadcast", fields: [broadcastingMsgId], references: [id])
  broadcastingMsgId   BigInt
  additionalMessage   String?   @db.VarChar(140)
}